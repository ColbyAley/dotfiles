set nocompatible
syntax on
execute pathogen#infect()
autocmd BufRead,BufNewFile *.md setlocal spell
au BufRead,BufNewFile *.handlebars,*.hbs set ft=html syntax=handlebars
autocmd vimenter * NERDTree
autocmd Vimenter * wincmd p
filetype plugin on
filetype plugin indent on
set paste
set clipboard=unnamed
set sw=2
set nowrap
set smarttab
set expandtab
set tabstop=2
set softtabstop=2
set number

set background=dark
colorscheme solarized

" Syntax checkers
let g:syntastic_javascript_checkers=['jslint']
let g:syntastic_yaml_checkers=['jsyaml']
let g:syntastic_ruby_checkers=['rubylint']

nnoremap zz ZZ " quickly save and quit out
nnoremap ; :

" Show tabs and trailing whitespaces
set list
set lcs=tab:>>
set lcs+=trail:.

map <silent> T :NERDTreeToggle<CR>
map <silent> <C-z> :wincmd h<CR>
map <silent> <C-x> :wincmd l<CR>

" Highlight all results when searching
set hlsearch

" NerdTree!
function! NERDTreeQuit()
  redir => buffersoutput
  silent buffers
  redir END
"                     1BufNo  2Mods.     3File           4LineNo
  let pattern = '^\s*\(\d\+\)\(.....\) "\(.*\)"\s\+line \(\d\+\)$'
  let windowfound = 0

  for bline in split(buffersoutput, "\n")
    let m = matchlist(bline, pattern)

    if (len(m) > 0)
      if (m[2] =~ '..a..')
        let windowfound = 1
      endif
    endif
  endfor

  if (!windowfound)
    quitall
  endif
endfunction
autocmd WinEnter * call NERDTreeQuit()

set statusline+=%r               " Read only flag
set statusline+=%f               " Filename
set statusline+=@
set statusline+=%{GitBranch()}
set statusline+=%=              " Align things right
set statusline+=Line:%l/%L[%p%%]
